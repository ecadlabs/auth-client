// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// Op Op
// swagger:model Op
type Op string

const (

	// OpReplace captures enum value "replace"
	OpReplace Op = "replace"

	// OpAdd captures enum value "add"
	OpAdd Op = "add"

	// OpRemove captures enum value "remove"
	OpRemove Op = "remove"
)

// for schema
var opEnum []interface{}

func init() {
	var res []Op
	if err := json.Unmarshal([]byte(`["replace","add","remove"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		opEnum = append(opEnum, v)
	}
}

func (m Op) validateOpEnum(path, location string, value Op) error {
	if err := validate.Enum(path, location, value, opEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this op
func (m Op) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOpEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
