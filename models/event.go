// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// Event Event
// swagger:model Event
type Event string

const (

	// EventCreate captures enum value "create"
	EventCreate Event = "create"

	// EventUpdate captures enum value "update"
	EventUpdate Event = "update"

	// EventAddRole captures enum value "add_role"
	EventAddRole Event = "add_role"

	// EventRemoveRole captures enum value "remove_role"
	EventRemoveRole Event = "remove_role"

	// EventDelete captures enum value "delete"
	EventDelete Event = "delete"

	// EventReset captures enum value "reset"
	EventReset Event = "reset"

	// EventResetRequest captures enum value "reset_request"
	EventResetRequest Event = "reset_request"

	// EventLogin captures enum value "login"
	EventLogin Event = "login"
)

// for schema
var eventEnum []interface{}

func init() {
	var res []Event
	if err := json.Unmarshal([]byte(`["create","update","add_role","remove_role","delete","reset","reset_request","login"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		eventEnum = append(eventEnum, v)
	}
}

func (m Event) validateEventEnum(path, location string, value Event) error {
	if err := validate.Enum(path, location, value, eventEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this event
func (m Event) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateEventEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
