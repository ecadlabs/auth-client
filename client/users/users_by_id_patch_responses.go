// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ecadlabs/auth-client/models"
)

// UsersByIDPatchReader is a Reader for the UsersByIDPatch structure.
type UsersByIDPatchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UsersByIDPatchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUsersByIDPatchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewUsersByIDPatchDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUsersByIDPatchOK creates a UsersByIDPatchOK with default headers values
func NewUsersByIDPatchOK() *UsersByIDPatchOK {
	return &UsersByIDPatchOK{}
}

/*UsersByIDPatchOK handles this case with default header values.

User response
*/
type UsersByIDPatchOK struct {
	Payload *models.User
}

func (o *UsersByIDPatchOK) Error() string {
	return fmt.Sprintf("[PATCH /users/{id}][%d] usersByIdPatchOK  %+v", 200, o.Payload)
}

func (o *UsersByIDPatchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersByIDPatchDefault creates a UsersByIDPatchDefault with default headers values
func NewUsersByIDPatchDefault(code int) *UsersByIDPatchDefault {
	return &UsersByIDPatchDefault{
		_statusCode: code,
	}
}

/*UsersByIDPatchDefault handles this case with default header values.

Error response
*/
type UsersByIDPatchDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the users by Id patch default response
func (o *UsersByIDPatchDefault) Code() int {
	return o._statusCode
}

func (o *UsersByIDPatchDefault) Error() string {
	return fmt.Sprintf("[PATCH /users/{id}][%d] UsersByIdPatch default  %+v", o._statusCode, o.Payload)
}

func (o *UsersByIDPatchDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
