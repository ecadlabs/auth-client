// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ecadlabs/auth-client/models"
)

// UsersByIDGetReader is a Reader for the UsersByIDGet structure.
type UsersByIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UsersByIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUsersByIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewUsersByIDGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUsersByIDGetOK creates a UsersByIDGetOK with default headers values
func NewUsersByIDGetOK() *UsersByIDGetOK {
	return &UsersByIDGetOK{}
}

/*UsersByIDGetOK handles this case with default header values.

User response
*/
type UsersByIDGetOK struct {
	Payload *models.User
}

func (o *UsersByIDGetOK) Error() string {
	return fmt.Sprintf("[GET /users/{id}][%d] usersByIdGetOK  %+v", 200, o.Payload)
}

func (o *UsersByIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersByIDGetDefault creates a UsersByIDGetDefault with default headers values
func NewUsersByIDGetDefault(code int) *UsersByIDGetDefault {
	return &UsersByIDGetDefault{
		_statusCode: code,
	}
}

/*UsersByIDGetDefault handles this case with default header values.

Error response
*/
type UsersByIDGetDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the users by Id get default response
func (o *UsersByIDGetDefault) Code() int {
	return o._statusCode
}

func (o *UsersByIDGetDefault) Error() string {
	return fmt.Sprintf("[GET /users/{id}][%d] UsersByIdGet default  %+v", o._statusCode, o.Payload)
}

func (o *UsersByIDGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
