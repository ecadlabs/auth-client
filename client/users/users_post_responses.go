// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ecadlabs/auth-client/models"
)

// UsersPostReader is a Reader for the UsersPost structure.
type UsersPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UsersPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewUsersPostCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewUsersPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUsersPostCreated creates a UsersPostCreated with default headers values
func NewUsersPostCreated() *UsersPostCreated {
	return &UsersPostCreated{}
}

/*UsersPostCreated handles this case with default header values.

User response
*/
type UsersPostCreated struct {
	Location string

	Payload *models.User
}

func (o *UsersPostCreated) Error() string {
	return fmt.Sprintf("[POST /users/][%d] usersPostCreated  %+v", 201, o.Payload)
}

func (o *UsersPostCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersPostDefault creates a UsersPostDefault with default headers values
func NewUsersPostDefault(code int) *UsersPostDefault {
	return &UsersPostDefault{
		_statusCode: code,
	}
}

/*UsersPostDefault handles this case with default header values.

Error response
*/
type UsersPostDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the users post default response
func (o *UsersPostDefault) Code() int {
	return o._statusCode
}

func (o *UsersPostDefault) Error() string {
	return fmt.Sprintf("[POST /users/][%d] UsersPost default  %+v", o._statusCode, o.Payload)
}

func (o *UsersPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
