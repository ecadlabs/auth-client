// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ecadlabs/auth-client/models"
)

// UsersGetReader is a Reader for the UsersGet structure.
type UsersGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UsersGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewUsersGetNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewUsersGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUsersGetNoContent creates a UsersGetNoContent with default headers values
func NewUsersGetNoContent() *UsersGetNoContent {
	return &UsersGetNoContent{}
}

/*UsersGetNoContent handles this case with default header values.

List of Users
*/
type UsersGetNoContent struct {
	Payload *models.UsersResponse
}

func (o *UsersGetNoContent) Error() string {
	return fmt.Sprintf("[GET /users/][%d] usersGetNoContent  %+v", 204, o.Payload)
}

func (o *UsersGetNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UsersResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersGetDefault creates a UsersGetDefault with default headers values
func NewUsersGetDefault(code int) *UsersGetDefault {
	return &UsersGetDefault{
		_statusCode: code,
	}
}

/*UsersGetDefault handles this case with default header values.

Error response
*/
type UsersGetDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the users get default response
func (o *UsersGetDefault) Code() int {
	return o._statusCode
}

func (o *UsersGetDefault) Error() string {
	return fmt.Sprintf("[GET /users/][%d] UsersGet default  %+v", o._statusCode, o.Payload)
}

func (o *UsersGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
