// Code generated by go-swagger; DO NOT EDIT.

package rbac

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ecadlabs/auth-client/models"
)

// RbacPermissionsGetReader is a Reader for the RbacPermissionsGet structure.
type RbacPermissionsGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RbacPermissionsGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewRbacPermissionsGetNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewRbacPermissionsGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRbacPermissionsGetNoContent creates a RbacPermissionsGetNoContent with default headers values
func NewRbacPermissionsGetNoContent() *RbacPermissionsGetNoContent {
	return &RbacPermissionsGetNoContent{}
}

/*RbacPermissionsGetNoContent handles this case with default header values.

Permissions list
*/
type RbacPermissionsGetNoContent struct {
	Payload []*models.PermissionDesc
}

func (o *RbacPermissionsGetNoContent) Error() string {
	return fmt.Sprintf("[GET /rbac/permissions/][%d] rbacPermissionsGetNoContent  %+v", 204, o.Payload)
}

func (o *RbacPermissionsGetNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRbacPermissionsGetDefault creates a RbacPermissionsGetDefault with default headers values
func NewRbacPermissionsGetDefault(code int) *RbacPermissionsGetDefault {
	return &RbacPermissionsGetDefault{
		_statusCode: code,
	}
}

/*RbacPermissionsGetDefault handles this case with default header values.

Error response
*/
type RbacPermissionsGetDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the rbac permissions get default response
func (o *RbacPermissionsGetDefault) Code() int {
	return o._statusCode
}

func (o *RbacPermissionsGetDefault) Error() string {
	return fmt.Sprintf("[GET /rbac/permissions/][%d] RbacPermissionsGet default  %+v", o._statusCode, o.Payload)
}

func (o *RbacPermissionsGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
